# Generated by Django 3.1.3 on 2020-11-25 23:37

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PbEncyclopedia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
                ('water', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('sun', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('propagation', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('hardiness', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('url', models.TextField(blank=True, null=True)),
                ('family', models.TextField(blank=True, null=True)),
                ('genus', models.TextField(blank=True, null=True)),
                ('species', models.TextField(blank=True, null=True)),
                ('where_to_grow', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('img', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pb_encyclopedia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('google_id', models.TextField(blank=True, null=True, unique=True)),
                ('photo', models.TextField(blank=True, null=True)),
                ('username', models.TextField(blank=True, null=True, unique=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('email', models.TextField(null=True, unique=True)),
                ('USDA_zone', models.TextField(blank=True, null=True)),
                ('receive_water_notif', models.BooleanField(blank=True, null=True)),
                ('receive_repot_notif', models.BooleanField(blank=True, null=True)),
                ('receive_fertilizing_notif', models.BooleanField(blank=True, null=True)),
                ('notif_time', models.DateTimeField(blank=True, null=True)),
                ('auth_user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='PlantProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plant_name', models.TextField(blank=True, null=True)),
                ('nickname', models.TextField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, null=True)),
                ('water_history', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(blank=True, null=True), size=None)),
                ('fertilize_history', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(blank=True, null=True), size=None)),
                ('repot_history', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(blank=True, null=True), size=None)),
                ('water_frequency', models.IntegerField(blank=True, null=True)),
                ('fertilize_frequency', models.IntegerField(blank=True, null=True)),
                ('repot_frequency', models.IntegerField(blank=True, null=True)),
                ('water_next_notif', models.DateField(blank=True, null=True)),
                ('fertilize_next_notif', models.DateField(blank=True, null=True)),
                ('repot_next_notif', models.DateField(blank=True, null=True)),
                ('notes', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(blank=True, null=True), size=None)),
                ('encyclopedia', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.pbencyclopedia')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.userprofile')),
            ],
            options={
                'db_table': 'plant_profile',
            },
        ),
    ]
